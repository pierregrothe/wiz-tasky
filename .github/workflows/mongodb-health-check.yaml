name: "MongoDB Health Check"

on:
  push:
    branches:
      - dev
      - staging

jobs:
  mongodb-health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Retrieve MongoDB Instance ID from Terraform
        id: get_instance
        run: |
          # Retrieve the MongoDB instance ID from Terraform output.
          INSTANCE_ID=$(terraform output -raw mongodb_instance_id)
          echo "Instance ID: $INSTANCE_ID"
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT

      - name: Send SSM Command to MongoDB Instance
        id: send_command
        run: |
          INSTANCE_ID=${{ steps.get_instance.outputs.instance_id }}
          echo "Sending SSM command to instance $INSTANCE_ID"
          COMMAND_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=${INSTANCE_ID}" \
            --parameters commands=["mongosh --quiet --eval 'db.runCommand({ ping: 1 })'"] \
            --timeout-seconds 30 \
            --query "Command.CommandId" \
            --output text)
          echo "Command ID: $COMMAND_ID"
          echo "command_id=$COMMAND_ID" >> $GITHUB_OUTPUT

      - name: Wait for SSM Command and Validate MongoDB Response
        run: |
          INSTANCE_ID=${{ steps.get_instance.outputs.instance_id }}
          COMMAND_ID=${{ steps.send_command.outputs.command_id }}
          echo "Waiting for SSM command $COMMAND_ID on instance $INSTANCE_ID"

          # Loop for up to 12 attempts (approx. 60 seconds total).
          for i in {1..12}; do
            OUTPUT=$(aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id "$INSTANCE_ID" \
              --query "StandardOutputContent" \
              --output text)
            echo "Attempt $i: $OUTPUT"
            # Check for the expected output pattern.
            if echo "$OUTPUT" | grep -q '"ok" : 1'; then
              echo "MongoDB is up and responding correctly."
              exit 0
            fi
            sleep 5
          done
          echo "MongoDB health check failed."
          exit 1