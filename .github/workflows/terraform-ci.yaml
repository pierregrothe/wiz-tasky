name: Terraform CI

on:
  push:
    branches: [ main ] # Trigger workflow on pushes to the main branch

jobs:
  terraform:
    name: Terraform Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/terraform-github-actions@latest
      with:
        terraform_version: 1.3.0 # Or specify your Terraform version

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: true # Allow plan to fail (e.g., for initial runs with no infrastructure)

    - name: Check Plan Status and Annotate PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fmt_step = steps.fmt;
          const validate_step = steps.validate;
          const plan_step = steps.plan;
          let output = `#### Terraform Format and Validate\n* format: ${fmt_step.outcome}
          * validate: ${validate_step.outcome}
          \n#### Terraform Plan\n<details><summary>Show Plan</summary>

          \`\`\`terraform\n${plan_step.outputs.stdout}\`\`\`

          </details>

          *Plan Status: ${plan_step.outcome}*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });