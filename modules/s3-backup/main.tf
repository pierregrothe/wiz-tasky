// File: modules/s3-backup/main.tf
// ---------------------------------------------------------------------------
// S3 Backup Module for wiz-tasky Project
//
// This module provisions an S3 bucket to store database backups.
// It enables versioning using aws_s3_bucket_versioning and conditionally applies
// a bucket policy based on the remediation_mode variable.
//
// Naming Convention:
//   - Resources are named dynamically using an environment prefix in the form:
//       <project_name>-<environment_name>
//   - For example, if project_name = "wiz-tasky" and environment_name = "dev",
//       the bucket name will be "wiz-tasky-dev-backups".
// 
// NOTE: To allow a misconfigured (public) bucket policy (when remediation_mode=false),
// your account-level Block Public Access settings must permit public bucket policies.
// Otherwise, you will get an AccessDenied error.
// ---------------------------------------------------------------------------

/*
  Local Variable: env_prefix
  Purpose:
    - Construct a dynamic prefix using the provided project and environment names.
    - Example: "wiz-tasky-dev"
*/
locals {
  env_prefix = "${var.project_name}-${var.environment_name}"
}

/*
  Create the S3 bucket.
  - The bucket name is dynamically constructed using the env_prefix.
  - Tags are applied by merging the base tags (provided via var.tags) with
    additional specific tags (Name and component).
*/
resource "aws_s3_bucket" "backup" {
  bucket = "${local.env_prefix}-backups"

  tags = merge(
    var.tags,
    {
      Name      = "${local.env_prefix}-backups",
      component = "s3-backup"
    }
  )
}

/*
  Configure the public access block for the S3 bucket.
  - Disables blocking of public policies so that our bucket policy can be applied.
  - WARNING: Disabling these settings may expose the bucket publicly.
*/
resource "aws_s3_bucket_public_access_block" "backup_public_access" {
  bucket = aws_s3_bucket.backup.id

  block_public_acls       = false
  block_public_policy     = false  // Allows public bucket policies.
  ignore_public_acls      = false
  restrict_public_buckets = false
}

/*
  Enable versioning on the S3 bucket.
  - Versioning helps preserve previous versions of objects, which is ideal for backup.
*/
resource "aws_s3_bucket_versioning" "backup_versioning" {
  bucket = aws_s3_bucket.backup.id

  versioning_configuration {
    status = "Enabled"
  }
}

/*
  Define the bucket policy document.
  - The policy conditionally allows or denies public read access based on remediation_mode.
  - When remediation_mode is false (misconfigured), the effect is "Allow" to enable public read access.
  - When remediation_mode is true (remediated), the effect is "Deny" to block public read access.
*/
data "aws_iam_policy_document" "bucket_policy" {
  statement {
    sid    = "PublicReadForMisconfigured"
    effect = var.remediation_mode ? "Deny" : "Allow"

    principals {
      type        = "AWS"
      identifiers = ["*"]
    }

    actions   = ["s3:GetObject"]
    resources = ["${aws_s3_bucket.backup.arn}/*"]
  }
}

/*
  Apply the bucket policy to the S3 bucket.
  - The policy is generated by the aws_iam_policy_document data source above.
*/
resource "aws_s3_bucket_policy" "backup_policy" {
  bucket = aws_s3_bucket.backup.id
  policy = data.aws_iam_policy_document.bucket_policy.json
}
